[{"/Users/dtzr/Documents/GitHub/netflix-clone/src/index.js":"1","/Users/dtzr/Documents/GitHub/netflix-clone/src/serviceWorker.js":"2","/Users/dtzr/Documents/GitHub/netflix-clone/src/App.js":"3","/Users/dtzr/Documents/GitHub/netflix-clone/src/app/store.js":"4","/Users/dtzr/Documents/GitHub/netflix-clone/src/firebase.js":"5","/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/HomeScreen.js":"6","/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/Watching.js":"7","/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/ProfileScreen.js":"8","/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/LoginScreen.js":"9","/Users/dtzr/Documents/GitHub/netflix-clone/src/features/userSlice.js":"10","/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/ManageProfiles.js":"11","/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/SignUpScreen.js":"12","/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/SignInScreen.js":"13","/Users/dtzr/Documents/GitHub/netflix-clone/src/Requests.js":"14","/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/PlanScreen.js":"15","/Users/dtzr/Documents/GitHub/netflix-clone/src/Footer.js":"16","/Users/dtzr/Documents/GitHub/netflix-clone/src/FullNav.js":"17","/Users/dtzr/Documents/GitHub/netflix-clone/src/Accordion.js":"18","/Users/dtzr/Documents/GitHub/netflix-clone/src/components/Row.js":"19","/Users/dtzr/Documents/GitHub/netflix-clone/src/components/SearchRow.js":"20","/Users/dtzr/Documents/GitHub/netflix-clone/src/components/Banner.js":"21","/Users/dtzr/Documents/GitHub/netflix-clone/src/components/Nav.js":"22","/Users/dtzr/Documents/GitHub/netflix-clone/src/FooterStyles.js":"23","/Users/dtzr/Documents/GitHub/netflix-clone/src/AccordionData.js":"24","/Users/dtzr/Documents/GitHub/netflix-clone/src/AccordionFormat.js":"25","/Users/dtzr/Documents/GitHub/netflix-clone/src/axios.js":"26"},{"size":627,"mtime":1638422014676,"results":"27","hashOfConfig":"28"},{"size":5014,"mtime":1620143076379,"results":"29","hashOfConfig":"28"},{"size":2952,"mtime":1621659642331,"results":"30","hashOfConfig":"28"},{"size":184,"mtime":1620882670355,"results":"31","hashOfConfig":"28"},{"size":709,"mtime":1656429218992,"results":"32","hashOfConfig":"28"},{"size":1848,"mtime":1625399175764,"results":"33","hashOfConfig":"28"},{"size":2929,"mtime":1620639815021,"results":"34","hashOfConfig":"28"},{"size":2448,"mtime":1621994107960,"results":"35","hashOfConfig":"28"},{"size":3788,"mtime":1623502121034,"results":"36","hashOfConfig":"28"},{"size":948,"mtime":1620479723400,"results":"37","hashOfConfig":"28"},{"size":4044,"mtime":1621658078129,"results":"38","hashOfConfig":"28"},{"size":1725,"mtime":1621674761600,"results":"39","hashOfConfig":"28"},{"size":1586,"mtime":1656429274458,"results":"40","hashOfConfig":"28"},{"size":707,"mtime":1656429345712,"results":"41","hashOfConfig":"28"},{"size":4815,"mtime":1656429270251,"results":"42","hashOfConfig":"28"},{"size":2171,"mtime":1621694097717,"results":"43","hashOfConfig":"28"},{"size":3047,"mtime":1621694110083,"results":"44","hashOfConfig":"28"},{"size":473,"mtime":1621694059054,"results":"45","hashOfConfig":"28"},{"size":2272,"mtime":1625399230803,"results":"46","hashOfConfig":"28"},{"size":1980,"mtime":1621906953397,"results":"47","hashOfConfig":"28"},{"size":1575,"mtime":1623505667926,"results":"48","hashOfConfig":"28"},{"size":6494,"mtime":1623507377562,"results":"49","hashOfConfig":"28"},{"size":2156,"mtime":1623501426758,"results":"50","hashOfConfig":"28"},{"size":2397,"mtime":1621694059094,"results":"51","hashOfConfig":"28"},{"size":541,"mtime":1656352379758,"results":"52","hashOfConfig":"28"},{"size":197,"mtime":1623424620275,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"gval7q",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/dtzr/Documents/GitHub/netflix-clone/src/index.js",[],["110","111"],"/Users/dtzr/Documents/GitHub/netflix-clone/src/serviceWorker.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/App.js",["112"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport LoginScreen from './screens/LoginScreen';\nimport db, { auth } from './firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout, selectUser } from './features/userSlice';\nimport ProfileScreen from './screens/ProfileScreen';\nimport Watching from './screens/Watching';\nimport ManageProfiles from './screens/ManageProfiles';\nimport SignInScreen from './screens/SignInScreen';\nimport SignUpScreen from './screens/SignUpScreen';\n\nfunction App() {\n\n  const user = useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  //For logging in and logging out\n  //Need for the retention of logged in info\n  useEffect(() => {\n    //acts like a listerner so it listens to any authenticated state change\n    //if log in and refresh, it will store it to your local memory\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth){\n        //logged in\n        dispatch(login({\n          uid: userAuth.uid,\n          email: userAuth.email,\n        }))\n      } else {\n        //logged out\n        dispatch(logout())\n      }\n    });\n    \n    //cleaning up\n    //if the component was to unmount, we don't want to duplicate another listerner\n    return unsubscribe\n  }, [dispatch, auth])\n\n  /* For checking if user has subscribed to a plan */\n  /* Only when user has subscribed to a plan, then render the movies */\n  const [plan, setPlan] = useState()\n\n  const currentUser = auth.currentUser\n  if (currentUser){\n    db.collection('customers')\n      .doc(user.uid)\n      .collection('subscriptions')\n      .get()\n      .then((querySnapshot) => {\n        if(!querySnapshot.empty){\n          setPlan(true)\n        } else {\n          setPlan(false)\n        }\n      })\n  }\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {/* If there is no user, render the login screen else render the app components */}\n        {!user ? (\n          <Switch>\n            <Route exact path='/'>\n              <LoginScreen/>\n            </Route>\n            <Route exact path='/signin'>\n              <SignInScreen/>\n            </Route>\n            <Route exact path='/signup'>\n              <SignUpScreen/>\n            </Route>\n          </Switch>\n        ) : (!plan ? (\n          <ProfileScreen/>\n        ) : (\n          <Switch>\n            <Route exact path = '/'>\n              <Watching/>\n            </Route>\n            \n            <Route exact path =\"/home\">\n              <HomeScreen/>\n            </Route>\n\n            <Route exact path='/profile'>\n              <ProfileScreen/>\n            </Route>\n\n            <Route exact path='/ManageProfiles'>\n              <ManageProfiles/>\n            </Route>\n          </Switch>\n        ))\n        }\n      </Router>\n        \n    </div>\n  );\n}\n\nexport default App;\n","/Users/dtzr/Documents/GitHub/netflix-clone/src/app/store.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/firebase.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/HomeScreen.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/Watching.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/ProfileScreen.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/LoginScreen.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/features/userSlice.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/ManageProfiles.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/SignUpScreen.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/SignInScreen.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/Requests.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/PlanScreen.js",["113"],"/Users/dtzr/Documents/GitHub/netflix-clone/src/Footer.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/FullNav.js",["114"],"/* NAVBAR FOR MANAGE PROFILE SCREEN */\n\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { selectUser } from './features/userSlice'\nimport db from './firebase'\nimport './FullNav.css'\n\nfunction FullNav() {\n\n  const [isProfile, setProfile] = useState(true)\n  const user = useSelector(selectUser)\n\n  const toggle = () => {\n    if (isProfile){\n      setProfile(!isProfile)\n      history.push('./home')\n    } else {\n      history.push('./profile')\n    }\n  }\n\n\n  /* Creating animation when scroll, navbar disappears */\n  const [show, handleShow] = useState(false);\n\n  /* to create the /profile page */\n  /* use to programmatically push the next page into the history stack*/\n  const history = useHistory();\n\n  const transitionNavBar = () => {\n    if (window.scrollY > 100) {\n      handleShow(true);\n    } else {<img \n          onClick={()=> history.push('/')}\n          className=\"nav__logo\" \n          src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\"\n          alt=\"\"\n        />\n      handleShow(false);\n    }\n  }\n\n  \n  useEffect(() => {\n    window.addEventListener(\"scroll\", transitionNavBar);\n    return () => {\n      window.removeEventListener(\"scroll\", transitionNavBar);\n  }},[transitionNavBar]) //code only runs when the component mounts\n\n  /* To check if subscription collection exists */\n  /* Only when subscripotion collection exists, then allow to render the movies page when clicking netflix logo */\n  const [subscribed, setSubscribed] = useState()\n  useEffect(()=> {\n      db.collection(\"customers\")\n        .doc(user.uid)\n        .collection('subscriptions')\n        .get()\n        .then(querySnapshot => {\n          querySnapshot.forEach( async subscription => {\n            if(subscription.exists){\n              setSubscribed(true)\n            }else{\n              setSubscribed(false)\n            };\n          });\n        });\n  }, [user.uid])\n  \n  return (\n    <div className = {`Fullnav ${show && \"Fullnav__black\"}`}> {/* Only add the nav__black class if the show variable is true  */}\n      <div className=\"Fullnav__contents\">\n        {/* Netflix Logo */}\n        {/* onClick to home page only renders when the user has subscribed to a package */}\n        <img \n          onClick={()=> subscribed ? history.push('/home') : alert(\"Please subscribe to a plan first\")}\n          className=\"Fullnav__logo\" \n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \n          alt=\"\"\n        />\n\n        {/* Avatar Logo */}\n        <img\n          onClick={toggle}\n          className=\"Fullnav__avatar\" \n          src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\"\n          alt=\"\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default FullNav\n","/Users/dtzr/Documents/GitHub/netflix-clone/src/Accordion.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/components/Row.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/components/SearchRow.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/components/Banner.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/components/Nav.js",["115"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { auth } from '../firebase'\nimport './Nav.css'\nimport searchIcon from '../image/search--icon.png'\n\nfunction Nav({value, handleChange}) {\n\n  const history = useHistory();\n\n  /* For the browse button */\n  const [isOpen, setOpen] = useState(false)\n\n  /* Creating animation when scroll, navbar disappears */\n  const [show, handleShow] = useState(false);\n\n  /* For the search button */\n  const [IsSearch, setSearch] = useState(false)\n\n  /* For the settings */\n  const [IsSettings, setSettings] = useState(false)\n\n  /* To toggle the subscribe page */\n  const [isProfile, setProfile] = useState(true)\n\n  const toggle= () => {\n    setOpen(!isOpen)\n  }\n\n  const toggle_search = () => {\n    setSearch(!IsSearch)\n  }\n\n  const toggle_setting = () => {\n    setSettings(!IsSettings)\n  }\n  \n  const toggleSubscribe = () => {\n    if (isProfile){\n      setProfile(!isProfile)\n      history.push('./home')\n    } else {\n      history.push('./profile')\n    }\n  }\n \n  const transitionNavBar = () => {\n    if (window.scrollY > 100) {\n      handleShow(true);\n    } else {<img \n          onClick={()=> history.push('/')}\n          className=\"nav__logo\" \n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \n          alt=\"\"\n        />\n      handleShow(false);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", transitionNavBar);\n    return () => {\n      window.removeEventListener(\"scroll\", transitionNavBar);\n    }\n  },[]) //code only runs when the component mounts\n\n  const signout = () => {\n    auth.signOut()\n    history.push('/')\n  }\n\n\n  return (\n    <div className = {`nav ${show && \"nav__black\"}`}> {/* Only add the nav__black class if the show variable is true  */}\n      <div className=\"nav__contents\">\n        {/* Netflix Logo */}\n        <img \n          onClick={()=> history.push('/home')}\n          className=\"real__nav__logo\" \n          src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \n          alt=\"Netflix__logo\"\n        />\n\n        {/* Nav Links */}\n        <div className=\"navbar__selection\">\n          <ul className=\"navbar__ul\">\n            <li className=\"navbar__li\">Home</li>\n            <li className=\"navbar__li\">Series</li>\n            <li className=\"navbar__li\">Films</li>\n            <li className=\"navbar__li\">New and Popular</li>\n            <li className=\"navbar__li\">My List</li>\n          </ul>\n        </div>\n\n        {/* Nav Dropdown Menus */}\n        <div className=\"navbar__dropdown\">\n          <button onMouseOver = {toggle} className=\"dropbtn\"> Browse </button>\n          <div \n            style = {{display: isOpen ? 'flex' : 'none'}}\n            onMouseMove = {toggle}\n            className=\"dropdown__content\">\n            <option className=\"dropdown__option\">Home</option>\n            <option className=\"dropdown__option\">Series</option>\n            <option className=\"dropdown__option\">Films</option>\n            <option className=\"dropdown__option\">News and Popular</option>\n            <option className=\"dropdown__option\">My List</option>\n          </div>\n        </div>\n\n        {/* Nav Search Menu */}\n        <div className=\"search__bar\">\n          <img \n            onClick = {toggle_search}\n            src={searchIcon}\n            alt=\"\"\n          />\n          <input \n            style={{\n              display: IsSearch ? 'inline-block' : 'none',\n              transform: IsSearch ? \"scaleX(1)\" : \"none\",\n            }}\n            placeholder=\"Titles, people, genres\"\n            value={value}\n            onChange={handleChange}\n          >\n          </input>\n        </div>\n\n        {/* Dropdown Avatar Logo */}\n        <div className=\"dropdown\">\n            <img\n              onClick={toggleSubscribe}\n              onMouseEnter={toggle_setting}\n              className=\"nav__avatar\" \n              src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\"\n              alt=\"\"\n            />\n            <div \n              style={{display: IsSettings ? \"inline-block\" : 'none'}}\n              className=\"settings__container\">\n              <div className=\"profiles__columns\">\n                <div className=\"profile__column\">\n                  <img\n                    src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABYbN2li_u3UMH4coDfBhqybOKYFnffjNB-tZ4qANwBa5drVi9_-Wr3sHmibY6gxM_Uizr856wW0cFLkDdGBSRnwpo7ij.png?r=2ca\"\n                    alt=\"\"/>\n                    <p>Christina</p>\n                </div>\n                <div className=\"profile__column\">\n                  <img\n                      src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABeUqbfriC_pGWtwTa1KOx-ZSiQYa7ltLkOuduGxY_GRRc41ugYJNGYHe4LNcmshST4qkRSENvcs2xFomPc0rtX8wq2NG.png?r=b97\"\n                      alt =\"\"\n                    />\n                    <p>Alvin</p>\n                </div>\n                <div className=\"profile__column\">\n                  <img\n                    src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABff9GwVfmWtIhQBhZVLjKfT9MzvpJ99k4whm5tLNuu006c_wBrRuAiNJJIztprmSh-qB7GM5P70bOGOZHnewedP84pLe.png?r=3ce\"\n                    alt =\"\"\n                    />\n                    <p>Issac</p>\n                </div>\n                <div className=\"profile__column\">\n                  <img\n                    src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABdm_-DEYu1y2T38LnXWSy-u7u24MbY361Zg2WziU3fOqSJy3w2j3-7E9f6FQVC_Rv3zj3xGZ1SQM7F6G8WjR4XFnHwDL.png?r=fcd\"\n                    alt =\"\"\n                    />\n                    <p>Children</p>\n                </div>\n              </div>\n\n              <h3\n                onClick={()=> history.push('./ManageProfiles')}\n                className=\"with_border_bottom\"\n              >Manage Profiles \n              </h3>\n              <h3 className=\"with_border_bottom\">Children</h3>\n              <div className=\"account__settings\">\n                <h3>Account</h3>\n                <h3>Help Centre</h3>\n                <h3 onClick={signout}>Sign out of Netflix</h3>\n              </div>\n            </div>\n          </div>\n        \n\n        {/* Manage profile section when hover over avatar logo */}\n        \n      </div>\n    </div>\n  )\n}\n\nexport default Nav\n","/Users/dtzr/Documents/GitHub/netflix-clone/src/FooterStyles.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/AccordionData.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/AccordionFormat.js",[],"/Users/dtzr/Documents/GitHub/netflix-clone/src/axios.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":42,"column":6,"nodeType":"122","endLine":42,"endColumn":22,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"124","line":32,"column":6,"nodeType":"122","endLine":32,"endColumn":8,"suggestions":"125"},{"ruleId":"120","severity":1,"message":"126","line":32,"column":9,"nodeType":"127","endLine":43,"endColumn":4},{"ruleId":"120","severity":1,"message":"128","line":65,"column":5,"nodeType":"122","endLine":65,"endColumn":7,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'auth'. Either exclude it or remove the dependency array. Outer scope values like 'auth' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["133"],"The 'transitionNavBar' function makes the dependencies of useEffect Hook (at line 50) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'transitionNavBar' in its own useCallback() Hook.","VariableDeclarator","React Hook useEffect has a missing dependency: 'transitionNavBar'. Either include it or remove the dependency array.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [dispatch]",{"range":"141","text":"142"},"Update the dependencies array to be: [user.uid]",{"range":"143","text":"144"},"Update the dependencies array to be: [transitionNavBar]",{"range":"145","text":"146"},[1410,1426],"[dispatch]",[1151,1153],"[user.uid]",[1546,1548],"[transitionNavBar]"]