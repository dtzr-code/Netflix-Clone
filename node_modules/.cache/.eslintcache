[{"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/index.js":"1","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/serviceWorker.js":"2","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/App.js":"3","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/app/store.js":"4","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Banner.js":"5","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Nav.js":"6","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Requests.js":"7","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/axios.js":"8","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Row.js":"9","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/HomeScreen.js":"10","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/LoginScreen.js":"11","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/SignUpScreen.js":"12","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/firebase.js":"13","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/features/userSlice.js":"14","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/ProfileScreen.js":"15","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/Watching.js":"16","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/ManageProfiles.js":"17","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/FullNav.js":"18","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/PlanScreen.js":"19","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Footer.js":"20","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/FooterStyles.js":"21","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Accordion.js":"22","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/AccordionData.js":"23","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/AccordionFormat.js":"24"},{"size":627,"mtime":1620143076379,"results":"25","hashOfConfig":"26"},{"size":5014,"mtime":1620143076379,"results":"27","hashOfConfig":"26"},{"size":2883,"mtime":1621410114625,"results":"28","hashOfConfig":"26"},{"size":184,"mtime":1620882670355,"results":"29","hashOfConfig":"26"},{"size":1579,"mtime":1620702163686,"results":"30","hashOfConfig":"26"},{"size":6107,"mtime":1621347977245,"results":"31","hashOfConfig":"26"},{"size":695,"mtime":1620277410166,"results":"32","hashOfConfig":"26"},{"size":197,"mtime":1620274170926,"results":"33","hashOfConfig":"26"},{"size":1331,"mtime":1620319152662,"results":"34","hashOfConfig":"26"},{"size":1118,"mtime":1620654213186,"results":"35","hashOfConfig":"26"},{"size":3518,"mtime":1621523844083,"results":"36","hashOfConfig":"26"},{"size":1438,"mtime":1620915544113,"results":"37","hashOfConfig":"26"},{"size":670,"mtime":1620363418894,"results":"38","hashOfConfig":"26"},{"size":948,"mtime":1620479723400,"results":"39","hashOfConfig":"26"},{"size":2244,"mtime":1621407205421,"results":"40","hashOfConfig":"26"},{"size":2929,"mtime":1620639815021,"results":"41","hashOfConfig":"26"},{"size":4044,"mtime":1620639796307,"results":"42","hashOfConfig":"26"},{"size":2985,"mtime":1621391493184,"results":"43","hashOfConfig":"26"},{"size":4842,"mtime":1621398963175,"results":"44","hashOfConfig":"26"},{"size":2171,"mtime":1621481426431,"results":"45","hashOfConfig":"26"},{"size":1745,"mtime":1621482028951,"results":"46","hashOfConfig":"26"},{"size":461,"mtime":1621566279646,"results":"47","hashOfConfig":"26"},{"size":2396,"mtime":1621486410491,"results":"48","hashOfConfig":"26"},{"size":623,"mtime":1621524372006,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1evpuxo",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/index.js",[],["102","103"],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/serviceWorker.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/App.js",["104","105"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport LoginScreen from './screens/LoginScreen';\nimport db, { auth } from './firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout, selectUser } from './features/userSlice';\nimport ProfileScreen from './screens/ProfileScreen';\nimport Watching from './screens/Watching';\nimport ManageProfiles from './screens/ManageProfiles';\nimport PlanScreen from './screens/PlanScreen';\n\nfunction App() {\n\n  const user = useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  //For logging in and logging out\n  //Need for the retention of logged in info\n  useEffect(() => {\n    //acts like a listerner so it listens to any authenticated state change\n    //if log in and refresh, it will store it to your local memory\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth){\n        //logged in\n        dispatch(login({\n          uid: userAuth.uid,\n          email: userAuth.email,\n        }))\n      } else {\n        //logged out\n        dispatch(logout())\n      }\n    });\n    \n    //cleaning up\n    //if the component was to unmount, we don't want to duplicate another listerner\n    return unsubscribe\n  }, [dispatch, auth])\n\n  const [plan, setPlan] = useState()\n  // useEffect(()=> {\n  //   db.collection(\"customers\")\n  //   .doc(user.uid)\n  //   .collection('subscriptions')\n  //   .get()\n  //   .then(querySnapshot => {\n  //     querySnapshot.forEach( async subscription => {\n  //       if(subscription.exists){\n  //         setSubscribed(true)\n  //       }else{\n  //         setSubscribed(false)\n  //       };\n  //     });\n  //   });\n  // }, [user.uid])\n\n  const currentUser = auth.currentUser\n  if (currentUser){\n    db.collection('customers')\n      .doc(user.uid)\n      .collection('subscriptions')\n      .get()\n      .then((querySnapshot) => {\n        if(!querySnapshot.empty){\n          setPlan(true)\n        } else {\n          setPlan(false)\n        }\n      })\n  }\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {/* If there is no user, render the login screen else render the app components */}\n        {!user ? (\n          <LoginScreen/>\n        ) : (!plan ? (\n          <ProfileScreen/>\n        ) : (\n          <Switch>\n            <Route exact path = '/'>\n              <Watching/>\n            </Route>\n            \n            <Route exact path =\"/home\">\n              <HomeScreen/>\n            </Route>\n\n            <Route exact path='/profile'>\n              <ProfileScreen/>\n            </Route>\n\n            <Route exact path='/ManageProfiles'>\n              <ManageProfiles/>\n            </Route>\n          </Switch>\n        ))\n        }\n      </Router>\n        \n    </div>\n  );\n}\n\nexport default App;\n","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/app/store.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Banner.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Nav.js",["106"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { auth } from './firebase'\nimport './Nav.css'\n\nfunction Nav() {\n\n  /* For the browse button */\n  const [isOpen, setOpen] = useState(false)\n\n  const toggle= () => {\n    setOpen(!isOpen)\n  }\n\n  /* For the search button */\n  const [IsSearch, setSearch] = useState(false)\n\n  const toggle_search = () => {\n    setSearch(!IsSearch)\n  }\n\n  /* For the settings */\n  const [IsSettings, setSettings] = useState(false)\n  const toggle_setting = () => {\n    setSettings(!IsSettings)\n  }\n\n  /* Creating animation when scroll, navbar disappears */\n  const [show, handleShow] = useState(false);\n\n  /* To toggle the subscribe page */\n  const [isProfile, setProfile] = useState(true)\n  const toggleSubscribe = () => {\n    if (isProfile){\n      setProfile(!isProfile)\n      history.push('./home')\n    } else {\n      history.push('./profile')\n    }\n  }\n\n  /* to create the /profile page */\n  /* use to programmatically push the next page into the history stack*/\n  const history = useHistory();\n\n  const transitionNavBar = () => {\n    if (window.scrollY > 100) {\n      handleShow(true);\n    } else {<img \n          onClick={()=> history.push('/')}\n          className=\"nav__logo\" \n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \n          alt=\"\"\n        />\n      handleShow(false);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", transitionNavBar);\n    return () => window.removeEventListener(\"scroll\", transitionNavBar);\n  },[]) //code only runs when the component mounts\n\n  return (\n    <div className = {`nav ${show && \"nav__black\"}`}> {/* Only add the nav__black class if the show variable is true  */}\n      <div className=\"nav__contents\">\n        {/* Netflix Logo */}\n        <img \n          onClick={()=> history.push('/home')}\n          className=\"nav__logo\" \n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \n          alt=\"\"\n        />\n\n        {/* Nav Links */}\n        <div className=\"navbar__selection\">\n          <ul className=\"navbar__ul\">\n            <li className=\"navbar__li\">Home</li>\n            <li className=\"navbar__li\">Series</li>\n            <li className=\"navbar__li\">Films</li>\n            <li className=\"navbar__li\">New and Popular</li>\n            <li className=\"navbar__li\">My List</li>\n          </ul>\n        </div>\n\n        {/* Nav Dropdown Menus */}\n        <div className=\"navbar__dropdown\">\n          <button onMouseOver = {toggle} className=\"dropbtn\"> Browse </button>\n          <div \n            style = {{display: isOpen ? 'flex' : 'none'}}\n            onMouseLeave = {toggle}\n            className=\"dropdown__content\">\n            <option className=\"dropdown__option\">Home</option>\n            <option className=\"dropdown__option\">Series</option>\n            <option className=\"dropdown__option\">Films</option>\n            <option className=\"dropdown__option\">News and Popular</option>\n            <option className=\"dropdown__option\">My List</option>\n          </div>\n        </div>\n\n        {/* Nav Search Menu */}\n        <div className=\"search__bar\">\n          <img \n            onClick = {toggle_search}\n            src = \"http://assets.stickpng.com/images/585e4ad1cb11b227491c3391.png\"\n            alt=\"\"\n          />\n          <input \n            style={{\n              display: IsSearch ? 'inline-block' : 'none',\n              transform: IsSearch ? \"scaleX(1)\" : \"none\",\n            }}\n            placeholder=\"Titles, people, genres\">\n          </input>\n        </div>\n\n        {/* Avatar Logo */}\n        <img\n          onClick={toggleSubscribe}\n          onMouseOver={toggle_setting}\n          className=\"nav__avatar\" \n          src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\"\n          alt=\"\"\n        />\n\n        {/* Manage profile section when hover over avatar logo */}\n        <div \n          style={{display: IsSettings ? \"inline-block\" : 'none'}}\n          className=\"settings__container\">\n          <div className=\"profiles__columns\">\n            <div className=\"profile__column\">\n              <img\n                src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABYbN2li_u3UMH4coDfBhqybOKYFnffjNB-tZ4qANwBa5drVi9_-Wr3sHmibY6gxM_Uizr856wW0cFLkDdGBSRnwpo7ij.png?r=2ca\"\n                alt=\"\"/>\n                <p>Christina</p>\n            </div>\n            <div className=\"profile__column\">\n              <img\n                  src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABeUqbfriC_pGWtwTa1KOx-ZSiQYa7ltLkOuduGxY_GRRc41ugYJNGYHe4LNcmshST4qkRSENvcs2xFomPc0rtX8wq2NG.png?r=b97\"\n                  alt =\"\"\n                />\n                <p>Alvin</p>\n            </div>\n            <div className=\"profile__column\">\n              <img\n                src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABff9GwVfmWtIhQBhZVLjKfT9MzvpJ99k4whm5tLNuu006c_wBrRuAiNJJIztprmSh-qB7GM5P70bOGOZHnewedP84pLe.png?r=3ce\"\n                alt =\"\"\n                />\n                <p>Issac</p>\n            </div>\n            <div className=\"profile__column\">\n              <img\n                src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABdm_-DEYu1y2T38LnXWSy-u7u24MbY361Zg2WziU3fOqSJy3w2j3-7E9f6FQVC_Rv3zj3xGZ1SQM7F6G8WjR4XFnHwDL.png?r=fcd\"\n                alt =\"\"\n                />\n                <p>Children</p>\n            </div>\n          </div>\n\n          <h3\n             onClick={()=> history.push('./ManageProfiles')}\n            className=\"with_border_bottom\">Manage Profiles </h3>\n          <h3 className=\"with_border_bottom\">Children</h3>\n          <div className=\"account__settings\">\n            <h3>Account</h3>\n            <h3>Help Centre</h3>\n            <h3 onClick={()=> auth.signOut()}>Sign out of Netflix</h3>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Nav\n","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Requests.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/axios.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Row.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/HomeScreen.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/LoginScreen.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/SignUpScreen.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/firebase.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/features/userSlice.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/ProfileScreen.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/Watching.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/ManageProfiles.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/FullNav.js",["107"],"/* NAVBAR FOR MANAGE PROFILE SCREEN */\n\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { selectUser } from './features/userSlice'\nimport db from './firebase'\nimport './FullNav.css'\n\nfunction FullNav() {\n\n  const [isProfile, setProfile] = useState(true)\n  const user = useSelector(selectUser)\n\n  const toggle = () => {\n    if (isProfile){\n      setProfile(!isProfile)\n      history.push('./home')\n    } else {\n      history.push('./profile')\n    }\n  }\n\n\n  /* Creating animation when scroll, navbar disappears */\n  const [show, handleShow] = useState(false);\n\n  /* to create the /profile page */\n  /* use to programmatically push the next page into the history stack*/\n  const history = useHistory();\n\n  const transitionNavBar = () => {\n    if (window.scrollY > 100) {\n      handleShow(true);\n    } else {<img \n          onClick={()=> history.push('/')}\n          className=\"nav__logo\" \n          src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\"\n          alt=\"\"\n        />\n      handleShow(false);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", transitionNavBar);\n    return () => window.removeEventListener(\"scroll\", transitionNavBar);\n  },[transitionNavBar]) //code only runs when the component mounts\n\n  /* To check if subscription collection exists */\n  /* Only when subscripotion collection exists, then allow to render the movies page when clicking netflix logo */\n  const [subscribed, setSubscribed] = useState()\n  useEffect(()=> {\n    db.collection(\"customers\")\n    .doc(user.uid)\n    .collection('subscriptions')\n    .get()\n    .then(querySnapshot => {\n      querySnapshot.forEach( async subscription => {\n        if(subscription.exists){\n          setSubscribed(true)\n        }else{\n          setSubscribed(false)\n        };\n      });\n    });\n  }, [user.uid])\n  \n  return (\n    <div className = {`Fullnav ${show && \"Fullnav__black\"}`}> {/* Only add the nav__black class if the show variable is true  */}\n      <div className=\"Fullnav__contents\">\n        {/* Netflix Logo */}\n        {/* onClick to home page only renders when the user has subscribed to a package */}\n        <img \n          onClick={()=> subscribed ? history.push('/home') : alert(\"Please subscribe to a plan first\")}\n          className=\"Fullnav__logo\" \n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \n          alt=\"\"\n        />\n\n        {/* Avatar Logo */}\n        <img\n          onClick={toggle}\n          className=\"Fullnav__avatar\" \n          src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\"\n          alt=\"\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default FullNav\n","/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/PlanScreen.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Footer.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/FooterStyles.js",["108"],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Accordion.js",["109","110"],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/AccordionData.js",[],"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/AccordionFormat.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":12,"column":8,"nodeType":"117","messageId":"118","endLine":12,"endColumn":18},{"ruleId":"119","severity":1,"message":"120","line":41,"column":6,"nodeType":"121","endLine":41,"endColumn":22,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":62,"column":5,"nodeType":"121","endLine":62,"endColumn":7,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"125","line":32,"column":9,"nodeType":"126","endLine":43,"endColumn":4},{"ruleId":"115","severity":1,"message":"127","line":2,"column":18,"nodeType":"117","messageId":"118","endLine":2,"endColumn":23},{"ruleId":"115","severity":1,"message":"128","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"115","severity":1,"message":"129","line":1,"column":28,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'PlanScreen' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'auth'. Either exclude it or remove the dependency array. Outer scope values like 'auth' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'transitionNavBar'. Either include it or remove the dependency array.",["133"],"The 'transitionNavBar' function makes the dependencies of useEffect Hook (at line 48) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'transitionNavBar' in its own useCallback() Hook.","VariableDeclarator","'LinkR' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [dispatch]",{"range":"138","text":"139"},"Update the dependencies array to be: [transitionNavBar]",{"range":"140","text":"141"},[1355,1371],"[dispatch]",[1563,1565],"[transitionNavBar]"]