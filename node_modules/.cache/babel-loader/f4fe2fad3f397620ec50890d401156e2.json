{"ast":null,"code":"import _slicedToArray from\"/Users/dtzr/Documents/GitHub/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import\"./HomeScreen.css\";import Nav from'../components/Nav';import Row from'../components/Row';import SearchRow from'../components/SearchRow';import Banner from'../components/Banner';import requests from'../Requests';import{API_KEY}from'../Requests';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function HomeScreen(){/* for the search results */var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var search_query=\"https://api.themoviedb.org/3/search/movie?api_key=\".concat(API_KEY,\"&query=\").concat(searchTerm);var _handleChange=function handleChange(e){setSearchTerm(e);};return/*#__PURE__*/_jsxs(\"div\",{className:\"homeScreen\",children:[/*#__PURE__*/_jsx(Nav,{value:searchTerm,handleChange:function handleChange(e){return _handleChange(e.target.value);}}),searchTerm?/*#__PURE__*/_jsx(SearchRow,{title:\"Search Results\",fetchUrl:search_query}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Banner,{}),/*#__PURE__*/_jsx(Row,{title:\"NETFLIX ORIGINALS\",fetchUrl:requests.fetchNetflixOriginals,isLargeRow:true}),/*#__PURE__*/_jsx(Row,{title:\"Trending Now\",fetchUrl:requests.fetchTrending}),/*#__PURE__*/_jsx(Row,{title:\"Top Rated\",fetchUrl:requests.fetchTopRated}),/*#__PURE__*/_jsx(Row,{title:\"Action Movies\",fetchUrl:requests.fetchActionMovies}),/*#__PURE__*/_jsx(Row,{title:\"Comedy Movies\",fetchUrl:requests.fetchComedyMovies}),/*#__PURE__*/_jsx(Row,{title:\"Horror Movies\",fetchUrl:requests.fetchHorrorMovies}),/*#__PURE__*/_jsx(Row,{title:\"Romance Movies\",fetchUrl:requests.fetchRomanceMovies}),/*#__PURE__*/_jsx(Row,{title:\"Documentaries\",fetchUrl:requests.fetchDocumentaries})]})]});}export default HomeScreen;","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/HomeScreen.js"],"names":["React","useState","Nav","Row","SearchRow","Banner","requests","API_KEY","HomeScreen","searchTerm","setSearchTerm","search_query","handleChange","e","target","value","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,MAAO,kBAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,aAArB,CACA,OAASC,OAAT,KAAwB,aAAxB,C,wFAEA,QAASC,CAAAA,UAAT,EAAsB,CAEpB,4BACA,cAAoCP,QAAQ,CAAC,EAAD,CAA5C,wCAAOQ,UAAP,eAAmBC,aAAnB,eAEA,GAAMC,CAAAA,YAAY,6DAAuDJ,OAAvD,mBAAwEE,UAAxE,CAAlB,CAEA,GAAMG,CAAAA,aAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,CACxBH,aAAa,CAACG,CAAD,CAAb,CACD,CAFD,CAIA,mBACE,aAAK,SAAS,CAAC,YAAf,wBAEE,KAAC,GAAD,EACE,KAAK,CAAEJ,UADT,CAEE,YAAY,CAAE,sBAAAI,CAAC,QAAGD,CAAAA,aAAY,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf,EAFjB,EAFF,CAMGN,UAAU,cAEP,KAAC,SAAD,EACE,KAAK,CAAC,gBADR,CAEE,QAAQ,CAAIE,YAFd,EAFO,cAOT,oCAEE,KAAC,MAAD,IAFF,cAOE,KAAC,GAAD,EACE,KAAK,CAAC,mBADR,CAEE,QAAQ,CAAEL,QAAQ,CAACU,qBAFrB,CAGE,UAAU,KAHZ,EAPF,cAYE,KAAC,GAAD,EAAK,KAAK,CAAC,cAAX,CAA0B,QAAQ,CAAEV,QAAQ,CAACW,aAA7C,EAZF,cAaE,KAAC,GAAD,EAAK,KAAK,CAAC,WAAX,CAAuB,QAAQ,CAAEX,QAAQ,CAACY,aAA1C,EAbF,cAcE,KAAC,GAAD,EAAK,KAAK,CAAC,eAAX,CAA2B,QAAQ,CAAEZ,QAAQ,CAACa,iBAA9C,EAdF,cAeE,KAAC,GAAD,EAAK,KAAK,CAAC,eAAX,CAA2B,QAAQ,CAAEb,QAAQ,CAACc,iBAA9C,EAfF,cAgBE,KAAC,GAAD,EAAK,KAAK,CAAC,eAAX,CAA2B,QAAQ,CAAEd,QAAQ,CAACe,iBAA9C,EAhBF,cAiBE,KAAC,GAAD,EAAK,KAAK,CAAC,gBAAX,CAA4B,QAAQ,CAAEf,QAAQ,CAACgB,kBAA/C,EAjBF,cAkBE,KAAC,GAAD,EAAK,KAAK,CAAC,eAAX,CAA2B,QAAQ,CAAEhB,QAAQ,CAACiB,kBAA9C,EAlBF,GAbJ,GADF,CAqCD,CAED,cAAef,CAAAA,UAAf","sourcesContent":["import React, {useState} from 'react'\nimport \"./HomeScreen.css\"\nimport Nav from '../components/Nav'\nimport Row from '../components/Row'\nimport SearchRow from '../components/SearchRow'\nimport Banner from '../components/Banner'\nimport requests from '../Requests'\nimport { API_KEY } from '../Requests'\n\nfunction HomeScreen() {\n\n  /* for the search results */\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  \n  const search_query= `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchTerm}`\n\n  const handleChange = e => {\n    setSearchTerm(e)\n  }\n\n  return (\n    <div className=\"homeScreen\">\n      {/* Nav */}\n      <Nav \n        value={searchTerm} \n        handleChange={e=> handleChange(e.target.value)}\n      />\n      {searchTerm\n        ?\n          <SearchRow \n            title=\"Search Results\" \n            fetchUrl = {search_query}\n          />\n        :\n        <div>\n          {/* Banner */}\n          <Banner/>\n\n            {/* Row */}\n            {/* Each row will take a few different props */}\n            {/* Props allow us to customise one component from another */}\n          <Row\n            title=\"NETFLIX ORIGINALS\"\n            fetchUrl={requests.fetchNetflixOriginals}\n            isLargeRow\n          />\n          <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n          <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n          <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n          <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n          <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n          <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n          <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n        </div>\n        }\n    </div>\n  )\n}\n\nexport default HomeScreen\n"]},"metadata":{},"sourceType":"module"}