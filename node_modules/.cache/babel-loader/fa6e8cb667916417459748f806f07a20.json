{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginScreen from './screens/LoginScreen';\nimport { auth } from './firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout, selectUser } from './features/userSlice';\nimport ProfileScreen from './screens/ProfileScreen';\nimport Watching from './screens/Watching';\nimport ManageProfiles from './screens/ManageProfiles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch(); //Need for the retention of logged in info\n\n  useEffect(() => {\n    //acts like a listerner so it listens to any authenticated state change\n    //if log in and refresh, it will store it to your local memory\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        //logged in\n        dispatch(login({\n          uid: userAuth.uid,\n          email: userAuth.email\n        }));\n      } else {\n        //logged out\n        dispatch(logout());\n      }\n    }); //cleaning up\n    //if the component was to unmount, we don't want to duplicate another listerner\n\n    return unsubscribe;\n  }, [dispatch]);\n  /* To check if subscription collection exists */\n\n  /* Only when subscripotion collection exists, then allow to render the movies page when clicking netflix logo */\n\n  const [subscribed, setSubscribed] = useState(null);\n  useEffect(() => {\n    db.collection(\"customers\").doc(user.uid).collection('subscriptions').get().then(querySnapshot => {\n      querySnapshot.forEach(async subscription => {\n        if (subscription.exists) {\n          setSubscribed(true);\n        } else {\n          setSubscribed(false);\n        }\n\n        ;\n      });\n    });\n  }, [user.uid]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: !user ? /*#__PURE__*/_jsxDEV(LoginScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this) : subscribed ? /*#__PURE__*/_jsxDEV(Watching, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Watching, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/home\",\n          children: /*#__PURE__*/_jsxDEV(HomeScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/profile\",\n          children: /*#__PURE__*/_jsxDEV(ProfileScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/ManageProfiles\",\n          children: /*#__PURE__*/_jsxDEV(ManageProfiles, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"u3ZL/F4e7umifAvtSKKwqv2l+Lk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/App.js"],"names":["React","useEffect","HomeScreen","BrowserRouter","Router","Switch","Route","LoginScreen","auth","useDispatch","useSelector","login","logout","selectUser","ProfileScreen","Watching","ManageProfiles","App","user","dispatch","unsubscribe","onAuthStateChanged","userAuth","uid","email","subscribed","setSubscribed","useState","db","collection","doc","get","then","querySnapshot","forEach","subscription","exists"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport LoginScreen from './screens/LoginScreen';\nimport { auth } from './firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout, selectUser } from './features/userSlice';\nimport ProfileScreen from './screens/ProfileScreen';\nimport Watching from './screens/Watching';\nimport ManageProfiles from './screens/ManageProfiles';\n\nfunction App() {\n\n  const user = useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  //Need for the retention of logged in info\n  useEffect(() => {\n    //acts like a listerner so it listens to any authenticated state change\n    //if log in and refresh, it will store it to your local memory\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      if (userAuth){\n        //logged in\n        dispatch(login({\n          uid: userAuth.uid,\n          email: userAuth.email,\n        }))\n      } else {\n        //logged out\n        dispatch(logout())\n      }\n    });\n\n    //cleaning up\n    //if the component was to unmount, we don't want to duplicate another listerner\n    return unsubscribe\n  }, [dispatch])\n\n  /* To check if subscription collection exists */\n  /* Only when subscripotion collection exists, then allow to render the movies page when clicking netflix logo */\n  const [subscribed, setSubscribed] = useState(null)\n  useEffect(()=> {\n    db.collection(\"customers\")\n    .doc(user.uid)\n    .collection('subscriptions')\n    .get()\n    .then(querySnapshot => {\n      querySnapshot.forEach( async subscription => {\n        if(subscription.exists){\n          setSubscribed(true)\n        }else{\n          setSubscribed(false)\n        };\n      });\n    });\n  }, [user.uid])\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {/* If there is no user, render the login screen else render the app components */}\n        {!user ? (\n          <LoginScreen/>\n        ) : (subscribed ? (\n          <Watching/>\n        ) : (\n          <Switch>\n            <Route exact path = '/'>\n              <Watching/>\n            </Route>\n            \n            <Route exact path =\"/home\">\n              <HomeScreen/>\n            </Route>\n\n            <Route exact path='/profile'>\n              <ProfileScreen/>\n            </Route>\n\n            <Route exact path='/ManageProfiles'>\n              <ManageProfiles/>\n            </Route>\n          </Switch>\n        ))\n}\n      </Router>\n        \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}