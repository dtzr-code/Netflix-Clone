{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Documents/GitHub/netflix-clone/src/AccordionFormat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccordionFormat = ({\n  header,\n  body,\n  id\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question--container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"accordion\",\n      onClick: () => setOpen(!open),\n      children: [header, id, !open && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this), open && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccordionFormat, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = AccordionFormat;\nexport default AccordionFormat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionFormat\");","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/netflix-clone/src/AccordionFormat.js"],"names":["React","useState","AccordionFormat","header","body","id","open","setOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAAD,KAA0B;AAAA;;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AAEA,sBAEE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BAEQ;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,OAAO,EAAE,MAAKM,OAAO,CAAC,CAACD,IAAF,CAFvB;AAAA,iBAIGH,MAJH,EAIWE,EAJX,EAKG,CAACC,IAAD,iBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALZ,EAMGA,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAYSA,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACP;AAAA,kBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,YAZjB;AAAA,KAA0CC,EAA1C;AAAA;AAAA;AAAA;AAAA,UAFF;AAoBD,CAvBD;;GAAMH,e;;KAAAA,e;AAyBN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst AccordionFormat = ({ header, body, id }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n\n    <div className=\"question--container\" key={id}>\n            {/* Question */}\n            <button \n              className=\"accordion\" \n              onClick={()=> setOpen(!open)}\n            >\n              {header}{id}\n              {!open && <p>+</p>}\n              {open && <p>x</p>}\n            </button>\n\n            {/* Answer */}\n            {open && <div className=\"panel\">\n              <p>{body}</p>\n            </div>}\n\n    </div>\n  );\n};\n\nexport default AccordionFormat;\n"]},"metadata":{},"sourceType":"module"}