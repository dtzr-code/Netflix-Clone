{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/PlanScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport db from '../firebase';\nimport './PlanScreen.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlanScreen() {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  /* fetch the plans from the database */\n\n  /* https://console.firebase.google.com/project/netflix2-clone-e95d8/firestore/data~2Fproducts~2Fprod_JT3hRI7rwmgJfh */\n\n  /* The 'products' and 'active' attribute is displayed in the link above */\n\n  useEffect(() => {\n    db.collection('products').where('active', '==', true).get().then(querySnapshot => {\n      const products = {};\n      querySnapshot.forEach(async productDoc => {\n        products[productDoc.id] = productDoc.data();\n        const priceSnap = await productDoc.ref.collection('prcies').get();\n        priceSnap.docs.forEach(price => {\n          products[productDoc.id].prices = {\n            priceId: price.id,\n            priceData: price.data()\n          };\n        });\n      });\n      setProducts(products);\n    });\n  }, []);\n  console.log(products);\n  /* Returns an object */\n\n  /* function to render the checckout/paying screen */\n\n  const loadCheckout = async priceId => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planScreen\",\n    children: Object.entries(products).map(([productId, productData]) => {\n      //Add some logic to check if the user's subscription is active\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"planScreen__plan\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planScreen_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: productData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: productData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => loadCheckout(productData.prices.priceId),\n          children: \"Subscribe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlanScreen, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n\n_c = PlanScreen;\nexport default PlanScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanScreen\");","map":{"version":3,"sources":["/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/screens/PlanScreen.js"],"names":["React","useEffect","useState","db","PlanScreen","products","setProducts","collection","where","get","then","querySnapshot","forEach","productDoc","id","data","priceSnap","ref","docs","price","prices","priceId","priceData","console","log","loadCheckout","Object","entries","map","productId","productData","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,EAAP,MAAe,aAAf;AACA,OAAO,kBAAP;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AAEA;;AACA;;AACA;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,EAAE,CAACI,UAAH,CAAc,UAAd,EACGC,KADH,CACS,QADT,EACmB,IADnB,EACyB,IADzB,EAEGC,GAFH,GAGGC,IAHH,CAGSC,aAAD,IAAmB;AACvB,YAAMN,QAAQ,GAAG,EAAjB;AACAM,MAAAA,aAAa,CAACC,OAAd,CAAsB,MAAOC,UAAP,IAAsB;AAC1CR,QAAAA,QAAQ,CAACQ,UAAU,CAACC,EAAZ,CAAR,GAA0BD,UAAU,CAACE,IAAX,EAA1B;AACA,cAAMC,SAAS,GAAG,MAAMH,UAAU,CAACI,GAAX,CAAeV,UAAf,CAA0B,QAA1B,EAAoCE,GAApC,EAAxB;AACAO,QAAAA,SAAS,CAACE,IAAV,CAAeN,OAAf,CAAwBO,KAAD,IAAW;AAChCd,UAAAA,QAAQ,CAACQ,UAAU,CAACC,EAAZ,CAAR,CAAwBM,MAAxB,GAAiC;AAC/BC,YAAAA,OAAO,EAAEF,KAAK,CAACL,EADgB;AAE/BQ,YAAAA,SAAS,EAAEH,KAAK,CAACJ,IAAN;AAFoB,WAAjC;AAID,SALD;AAMD,OATD;AAUAT,MAAAA,WAAW,CAACD,QAAD,CAAX;AACD,KAhBH;AAiBD,GAlBQ,EAkBP,EAlBO,CAAT;AAoBAkB,EAAAA,OAAO,CAACC,GAAR,CAAYnB,QAAZ;AAAsB;;AAEtB;;AACA,QAAMoB,YAAY,GAAG,MAAOJ,OAAP,IAAmB,CAEvC,CAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cAIGK,MAAM,CAACC,OAAP,CAAetB,QAAf,EAAyBuB,GAAzB,CAA6B,CAAC,CAACC,SAAD,EAAYC,WAAZ,CAAD,KAA8B;AAC1D;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAA,sBAAKA,WAAW,CAACC;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,WAAW,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAQ,UAAA,OAAO,EAAE,MAAMP,YAAY,CAACK,WAAW,CAACV,MAAZ,CAAmBC,OAApB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD,KAbA;AAJH;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAxDQjB,U;;KAAAA,U;AA0DT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport db from '../firebase'\nimport './PlanScreen.css'\n\nfunction PlanScreen() {\n\n  const [products, setProducts] = useState([])\n\n  /* fetch the plans from the database */\n  /* https://console.firebase.google.com/project/netflix2-clone-e95d8/firestore/data~2Fproducts~2Fprod_JT3hRI7rwmgJfh */\n  /* The 'products' and 'active' attribute is displayed in the link above */\n  useEffect(() => {\n    db.collection('products')\n      .where('active', '==', true)\n      .get()\n      .then((querySnapshot) => {\n        const products = {};\n        querySnapshot.forEach(async (productDoc) => {\n          products[productDoc.id] = productDoc.data();\n          const priceSnap = await productDoc.ref.collection('prcies').get();\n          priceSnap.docs.forEach((price) => {\n            products[productDoc.id].prices = {\n              priceId: price.id,\n              priceData: price.data(),\n            };\n          });\n        });\n        setProducts(products);\n      });\n  },[]);\n\n  console.log(products) /* Returns an object */\n\n  /* function to render the checckout/paying screen */\n  const loadCheckout = async (priceId) => {\n\n  }\n\n  return (\n    <div className=\"planScreen\">\n      {/* Need to map through an object */}\n      {/* Object.entries() will return a key-value pair in an array */}\n      {/* â€‹Object.keys(objectName).map( key => (<div>objectName[key]</div>)) */}\n      {Object.entries(products).map(([productId, productData]) => {\n        //Add some logic to check if the user's subscription is active\n        return (\n          <div className=\"planScreen__plan\">\n            <div className=\"planScreen_info\">\n              <h5>{productData.name}</h5>\n              <h6>{productData.description}</h6>\n            </div>\n\n            <button onClick={() => loadCheckout(productData.prices.priceId)}>Subscribe</button>\n          </div>\n\n        )\n      })}\n      \n    </div>\n  )\n}\n\nexport default PlanScreen\n"]},"metadata":{},"sourceType":"module"}