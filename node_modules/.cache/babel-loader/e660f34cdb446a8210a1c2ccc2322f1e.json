{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport LoginScreen from './screens/LoginScreen';\nimport { auth } from './firebase';\nimport { useDispatch } from 'react-redux';\nimport { logout } from './features/userSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const user = null;\n  const dispatch = useDispatch(); //Need for the retention of logged in info\n\n  useEffect(() => {\n    //acts like a listerner so it listens to any authenticated state change\n    //if log in and refresh, it will store it to your local memory\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        //logged in\n        console.log(userAuth);\n      } else {\n        //logged out\n        dispatch(logout);\n      }\n    }); //cleaning up\n    //if the component was to unmount, we don't want to duplicate another listerner\n\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: !user ? /*#__PURE__*/_jsxDEV(LoginScreen, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Switch, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(HomeScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/App.js"],"names":["React","useEffect","HomeScreen","BrowserRouter","Router","Switch","Route","LoginScreen","auth","useDispatch","logout","App","user","dispatch","unsubscribe","onAuthStateChanged","userAuth","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAqD,kBAArD;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,IAAT,QAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,sBAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,IAAI,GAAG,IAAb;AAEA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CAJa,CAMb;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,UAAMa,WAAW,GAAGN,IAAI,CAACO,kBAAL,CAAwBC,QAAQ,IAAI;AACtD,UAAIA,QAAJ,EAAa;AACX;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAHD,MAGO;AACL;AACAH,QAAAA,QAAQ,CAACH,MAAD,CAAR;AACD;AACF,KARmB,CAApB,CAHc,CAad;AACA;;AACA,WAAOI,WAAP;AACD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,MAAD;AAAA,gBAEG,CAACF,IAAD,gBACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAE,GAAnB;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA1CQD,G;UAIUF,W;;;KAJVE,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\nimport HomeScreen from './screens/HomeScreen';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport LoginScreen from './screens/LoginScreen';\nimport { auth } from './firebase';\nimport { useDispatch } from 'react-redux';\nimport { logout } from './features/userSlice';\n\nfunction App() {\n\n  const user = null;\n\n  const dispatch = useDispatch()\n\n  //Need for the retention of logged in info\n  useEffect(() => {\n    //acts like a listerner so it listens to any authenticated state change\n    //if log in and refresh, it will store it to your local memory\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      if (userAuth){\n        //logged in\n        console.log(userAuth)\n      } else {\n        //logged out\n        dispatch(logout)\n      }\n    });\n\n    //cleaning up\n    //if the component was to unmount, we don't want to duplicate another listerner\n    return unsubscribe\n  }, [])\n\n  return (\n    <div className=\"app\">\n      <Router>\n        {/* If there is no user, render the login screen else render the app components */}\n        {!user ? (\n          <LoginScreen/>\n        ): (\n          <Switch>\n            <Route exact path =\"/\">\n              <HomeScreen/>\n            </Route>\n          </Switch>\n        )}\n      </Router>\n        \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}