{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dtzr/Documents/GitHub/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dtzr/Documents/GitHub/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/dtzr/Documents/GitHub/netflix-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* NAVBAR FOR MANAGE PROFILE SCREEN */import React,{useEffect,useState}from'react';import{useSelector}from'react-redux';import{useHistory}from'react-router-dom';import{selectUser}from'./features/userSlice';import db from'./firebase';import'./FullNav.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function FullNav(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isProfile=_useState2[0],setProfile=_useState2[1];var user=useSelector(selectUser);var toggle=function toggle(){if(isProfile){setProfile(!isProfile);history.push('./home');}else{history.push('./profile');}};/* Creating animation when scroll, navbar disappears */var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),show=_useState4[0],handleShow=_useState4[1];/* to create the /profile page */ /* use to programmatically push the next page into the history stack*/var history=useHistory();var transitionNavBar=function transitionNavBar(){if(window.scrollY>100){handleShow(true);}else{/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return history.push('/');},className:\"nav__logo\",src:\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\",alt:\"\"});handleShow(false);}};useEffect(function(){window.addEventListener(\"scroll\",transitionNavBar);return function(){window.removeEventListener(\"scroll\",transitionNavBar);};},[transitionNavBar]);//code only runs when the component mounts\n/* To check if subscription collection exists */ /* Only when subscripotion collection exists, then allow to render the movies page when clicking netflix logo */var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),subscribed=_useState6[0],setSubscribed=_useState6[1];useEffect(function(){db.collection(\"customers\").doc(user.uid).collection('subscriptions').get().then(function(querySnapshot){querySnapshot.forEach(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(subscription){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(subscription.exists){setSubscribed(true);}else{setSubscribed(false);};case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());});},[user.uid]);return/*#__PURE__*/_jsxs(\"div\",{className:\"Fullnav \".concat(show&&\"Fullnav__black\"),children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"Fullnav__contents\",children:[/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return subscribed?history.push('/home'):alert(\"Please subscribe to a plan first\");},className:\"Fullnav__logo\",src:\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\",alt:\"\"}),/*#__PURE__*/_jsx(\"img\",{onClick:toggle,className:\"Fullnav__avatar\",src:\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\",alt:\"\"})]})]});}export default FullNav;","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/netflix-clone/src/FullNav.js"],"names":["React","useEffect","useState","useSelector","useHistory","selectUser","db","FullNav","isProfile","setProfile","user","toggle","history","push","show","handleShow","transitionNavBar","window","scrollY","addEventListener","removeEventListener","subscribed","setSubscribed","collection","doc","uid","get","then","querySnapshot","forEach","subscription","exists","alert"],"mappings":"geAAA,sCAEA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,UAAT,KAA2B,sBAA3B,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,MAAO,eAAP,C,wFAEA,QAASC,CAAAA,OAAT,EAAmB,CAEjB,cAAgCL,QAAQ,CAAC,IAAD,CAAxC,wCAAOM,SAAP,eAAkBC,UAAlB,eACA,GAAMC,CAAAA,IAAI,CAAGP,WAAW,CAACE,UAAD,CAAxB,CAEA,GAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB,GAAIH,SAAJ,CAAc,CACZC,UAAU,CAAC,CAACD,SAAF,CAAV,CACAI,OAAO,CAACC,IAAR,CAAa,QAAb,EACD,CAHD,IAGO,CACLD,OAAO,CAACC,IAAR,CAAa,WAAb,EACD,CACF,CAPD,CAUA,uDACA,eAA2BX,QAAQ,CAAC,KAAD,CAAnC,yCAAOY,IAAP,eAAaC,UAAb,eAEA,iCAlBiB,CAmBjB,sEACA,GAAMH,CAAAA,OAAO,CAAGR,UAAU,EAA1B,CAEA,GAAMY,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,GAAIC,MAAM,CAACC,OAAP,CAAiB,GAArB,CAA0B,CACxBH,UAAU,CAAC,IAAD,CAAV,CACD,CAFD,IAEO,CAAC,yBACF,OAAO,CAAE,yBAAKH,CAAAA,OAAO,CAACC,IAAR,CAAa,GAAb,CAAL,EADP,CAEF,SAAS,CAAC,WAFR,CAGF,GAAG,CAAC,sLAHF,CAIF,GAAG,CAAC,EAJF,GAMNE,UAAU,CAAC,KAAD,CAAV,CACD,CACF,CAXD,CAcAd,SAAS,CAAC,UAAM,CACdgB,MAAM,CAACE,gBAAP,CAAwB,QAAxB,CAAkCH,gBAAlC,EACA,MAAO,WAAM,CACXC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,CAAqCJ,gBAArC,EACH,CAFC,CAEA,CAJO,CAIN,CAACA,gBAAD,CAJM,CAAT,CAIuB;AAEvB,gDA1CiB,CA2CjB,gHACA,eAAoCd,QAAQ,EAA5C,yCAAOmB,UAAP,eAAmBC,aAAnB,eACArB,SAAS,CAAC,UAAK,CACXK,EAAE,CAACiB,UAAH,CAAc,WAAd,EACGC,GADH,CACOd,IAAI,CAACe,GADZ,EAEGF,UAFH,CAEc,eAFd,EAGGG,GAHH,GAIGC,IAJH,CAIQ,SAAAC,aAAa,CAAI,CACrBA,aAAa,CAACC,OAAd,0FAAuB,iBAAMC,YAAN,kHACrB,GAAGA,YAAY,CAACC,MAAhB,CAAuB,CACrBT,aAAa,CAAC,IAAD,CAAb,CACD,CAFD,IAEK,CACHA,aAAa,CAAC,KAAD,CAAb,CACD,EALoB,sDAAvB,gEAOD,CAZH,EAaH,CAdQ,CAcN,CAACZ,IAAI,CAACe,GAAN,CAdM,CAAT,CAgBA,mBACE,aAAK,SAAS,mBAAeX,IAAI,EAAI,gBAAvB,CAAd,4BACE,aAAK,SAAS,CAAC,mBAAf,wBAGE,YACE,OAAO,CAAE,yBAAKO,CAAAA,UAAU,CAAGT,OAAO,CAACC,IAAR,CAAa,OAAb,CAAH,CAA2BmB,KAAK,CAAC,kCAAD,CAA/C,EADX,CAEE,SAAS,CAAC,eAFZ,CAGE,GAAG,CAAC,gEAHN,CAIE,GAAG,CAAC,EAJN,EAHF,cAWE,YACE,OAAO,CAAErB,MADX,CAEE,SAAS,CAAC,iBAFZ,CAGE,GAAG,CAAC,sLAHN,CAIE,GAAG,CAAC,EAJN,EAXF,GADF,GADF,CAsBD,CAED,cAAeJ,CAAAA,OAAf","sourcesContent":["/* NAVBAR FOR MANAGE PROFILE SCREEN */\n\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { selectUser } from './features/userSlice'\nimport db from './firebase'\nimport './FullNav.css'\n\nfunction FullNav() {\n\n  const [isProfile, setProfile] = useState(true)\n  const user = useSelector(selectUser)\n\n  const toggle = () => {\n    if (isProfile){\n      setProfile(!isProfile)\n      history.push('./home')\n    } else {\n      history.push('./profile')\n    }\n  }\n\n\n  /* Creating animation when scroll, navbar disappears */\n  const [show, handleShow] = useState(false);\n\n  /* to create the /profile page */\n  /* use to programmatically push the next page into the history stack*/\n  const history = useHistory();\n\n  const transitionNavBar = () => {\n    if (window.scrollY > 100) {\n      handleShow(true);\n    } else {<img \n          onClick={()=> history.push('/')}\n          className=\"nav__logo\" \n          src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\"\n          alt=\"\"\n        />\n      handleShow(false);\n    }\n  }\n\n  \n  useEffect(() => {\n    window.addEventListener(\"scroll\", transitionNavBar);\n    return () => {\n      window.removeEventListener(\"scroll\", transitionNavBar);\n  }},[transitionNavBar]) //code only runs when the component mounts\n\n  /* To check if subscription collection exists */\n  /* Only when subscripotion collection exists, then allow to render the movies page when clicking netflix logo */\n  const [subscribed, setSubscribed] = useState()\n  useEffect(()=> {\n      db.collection(\"customers\")\n        .doc(user.uid)\n        .collection('subscriptions')\n        .get()\n        .then(querySnapshot => {\n          querySnapshot.forEach( async subscription => {\n            if(subscription.exists){\n              setSubscribed(true)\n            }else{\n              setSubscribed(false)\n            };\n          });\n        });\n  }, [user.uid])\n  \n  return (\n    <div className = {`Fullnav ${show && \"Fullnav__black\"}`}> {/* Only add the nav__black class if the show variable is true  */}\n      <div className=\"Fullnav__contents\">\n        {/* Netflix Logo */}\n        {/* onClick to home page only renders when the user has subscribed to a package */}\n        <img \n          onClick={()=> subscribed ? history.push('/home') : alert(\"Please subscribe to a plan first\")}\n          className=\"Fullnav__logo\" \n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \n          alt=\"\"\n        />\n\n        {/* Avatar Logo */}\n        <img\n          onClick={toggle}\n          className=\"Fullnav__avatar\" \n          src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\"\n          alt=\"\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default FullNav\n"]},"metadata":{},"sourceType":"module"}