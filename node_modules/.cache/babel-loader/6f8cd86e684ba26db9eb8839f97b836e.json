{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Documents/GitHub/netflix-clone/src/AccordionFormat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccordionFormat = ({\n  header,\n  body,\n  id\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question--container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"accordion\",\n      onClick: () => setOpen(!open),\n      children: [header, !open && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 19\n      }, this), open && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccordionFormat, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = AccordionFormat;\nexport default AccordionFormat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionFormat\");","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/netflix-clone/src/AccordionFormat.js"],"names":["React","useState","AccordionFormat","header","body","id","open","setOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAAD,KAA0B;AAAA;;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BAEE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAE,MAAMM,OAAO,CAAC,CAACD,IAAF,CAApD;AAAA,iBACGH,MADH,EAEG,CAACG,IAAD,iBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFZ,EAGGA,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EASGA,IAAI,iBACH;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAA,kBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApBD;;GAAMF,e;;KAAAA,e;AAsBN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst AccordionFormat = ({ header, body, id }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div className=\"question--container\">\n      {/* Question */}\n      <button className=\"accordion\" onClick={() => setOpen(!open)}>\n        {header}\n        {!open && <p>+</p>}\n        {open && <p>x</p>}\n      </button>\n\n      {/* Answer */}\n      {open && (\n        <div className=\"panel\">\n          <p>{body}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AccordionFormat;\n"]},"metadata":{},"sourceType":"module"}