{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Derrick\\\\Github\\\\netflix-clone\\\\src\\\\AccordionFormat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccordionFormat = ({\n  header,\n  body,\n  id\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question--container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"accordion\",\n      onClick: () => setOpen(!open),\n      children: [header, !open && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this), open && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccordionFormat, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = AccordionFormat;\nexport default AccordionFormat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccordionFormat\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Derrick/Github/netflix-clone/src/AccordionFormat.js"],"names":["React","useState","AccordionFormat","header","body","id","open","setOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,IAAV;AAAgBC,EAAAA;AAAhB,CAAD,KAA0B;AAAA;;AAChD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AAEA,sBAEE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BAEQ;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,OAAO,EAAE,MAAKM,OAAO,CAAC,CAACD,IAAF,CAFvB;AAAA,iBAIGH,MAJH,EAKG,CAACG,IAAD,iBAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALZ,EAMGA,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFR,EAYSA,IAAI,iBAAI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACP;AAAA,kBAAIF;AAAJ;AAAA;AAAA;AAAA;AAAA;AADO;AAAA;AAAA;AAAA;AAAA,YAZjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAoBD,CAvBD;;GAAMF,e;;KAAAA,e;AAyBN,eAAeA,eAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AccordionFormat = ({ header, body, id }) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n\r\n    <div className=\"question--container\">\r\n            {/* Question */}\r\n            <button \r\n              className=\"accordion\" \r\n              onClick={()=> setOpen(!open)}\r\n            >\r\n              {header}\r\n              {!open && <p>+</p>}\r\n              {open && <p>x</p>}\r\n            </button>\r\n\r\n            {/* Answer */}\r\n            {open && <div className=\"panel\">\r\n              <p>{body}</p>\r\n            </div>}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccordionFormat;\r\n"]},"metadata":{},"sourceType":"module"}