{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/FullNav.js\",\n    _s = $RefreshSig$();\n\n/* NAVBAR FOR MANAGE PROFILE SCREEN */\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { selectUser } from './features/userSlice';\nimport db from './firebase';\nimport './FullNav.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FullNav() {\n  _s();\n\n  const [isProfile, setProfile] = useState(true);\n  const user = useSelector(selectUser);\n\n  const toggle = () => {\n    if (isProfile) {\n      setProfile(!isProfile);\n      history.push('./home');\n    } else {\n      history.push('./profile');\n    }\n  };\n  /* Creating animation when scroll, navbar disappears */\n\n\n  const [show, handleShow] = useState(false);\n  /* to create the /profile page */\n\n  /* use to programmatically push the next page into the history stack*/\n\n  const history = useHistory();\n\n  const transitionNavBar = () => {\n    if (window.scrollY > 100) {\n      handleShow(true);\n    } else {\n      /*#__PURE__*/\n      _jsxDEV(\"img\", {\n        onClick: () => history.push('/'),\n        className: \"nav__logo\",\n        src: \"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this);\n\n      handleShow(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", transitionNavBar);\n    return () => window.removeEventListener(\"scroll\", transitionNavBar);\n  }, [transitionNavBar]); //code only runs when the component mounts\n\n  const [subscribed, setSubscribed] = useState();\n  useEffect(() => {\n    db.collection('customers').doc(user.id).collection('subscriptions').limit(1).get().then(querySnapshot => {});\n\n    if (querySnapshot.empty) {\n      console.log('sub-collection not existed');\n    }\n  }, []);\n  console.log(subscribed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Fullnav ${show && \"Fullnav__black\"}`,\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Fullnav__contents\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => history.push('/home'),\n        className: \"Fullnav__logo\",\n        src: \"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: toggle,\n        className: \"Fullnav__avatar\",\n        src: \"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FullNav, \"FXd3+RTwp7Mf9D4HC9OVwHj1l/M=\", false, function () {\n  return [useSelector, useHistory];\n});\n\n_c = FullNav;\nexport default FullNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"FullNav\");","map":{"version":3,"sources":["/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/FullNav.js"],"names":["React","useEffect","useState","useSelector","useHistory","selectUser","db","FullNav","isProfile","setProfile","user","toggle","history","push","show","handleShow","transitionNavBar","window","scrollY","addEventListener","removeEventListener","subscribed","setSubscribed","collection","doc","id","limit","get","then","querySnapshot","empty","console","log"],"mappings":"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","sourcesContent":["/* NAVBAR FOR MANAGE PROFILE SCREEN */\n\nimport React, { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { selectUser } from './features/userSlice'\nimport db from './firebase'\nimport './FullNav.css'\n\nfunction FullNav() {\n\n  const [isProfile, setProfile] = useState(true)\n  const user = useSelector(selectUser)\n\n  const toggle = () => {\n    if (isProfile){\n      setProfile(!isProfile)\n      history.push('./home')\n    } else {\n      history.push('./profile')\n    }\n  }\n\n\n  /* Creating animation when scroll, navbar disappears */\n  const [show, handleShow] = useState(false);\n\n  /* to create the /profile page */\n  /* use to programmatically push the next page into the history stack*/\n  const history = useHistory();\n\n  const transitionNavBar = () => {\n    if (window.scrollY > 100) {\n      handleShow(true);\n    } else {<img \n          onClick={()=> history.push('/')}\n          className=\"nav__logo\" \n          src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\"\n          alt=\"\"\n        />\n      handleShow(false);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", transitionNavBar);\n    return () => window.removeEventListener(\"scroll\", transitionNavBar);\n  },[transitionNavBar]) //code only runs when the component mounts\n\n  const [subscribed, setSubscribed] = useState()\n  \n  useEffect(() => {\n    db.collection('customers')\n      .doc(user.id)\n      .collection('subscriptions')\n      .limit(1)\n      .get()\n      .then(querySnapshot => {\n        \n      })\n      if (querySnapshot.empty) {\n        console.log('sub-collection not existed')\n      }\n      \n  },[]);\n\n  console.log(subscribed)\n\n\n  return (\n    <div className = {`Fullnav ${show && \"Fullnav__black\"}`}> {/* Only add the nav__black class if the show variable is true  */}\n      <div className=\"Fullnav__contents\">\n        {/* Netflix Logo */}\n        {/* onClick to home page only renders when the user has subscribed to a package */}\n        <img \n          onClick={()=> history.push('/home')}\n          className=\"Fullnav__logo\" \n          src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" \n          alt=\"\"\n        />\n\n        {/* Avatar Logo */}\n        <img\n          onClick={toggle}\n          className=\"Fullnav__avatar\" \n          src=\"https://occ-0-3069-58.1.nflxso.net/dnm/api/v6/K6hjPJd6cR6FpVELC5Pd6ovHRSk/AAAABcGt38lP6INwT06gZ5Nn1fi8zT7r-ad0GfCsiLhB6zibZZCCCq_0EdrPvh5_-xs-pNl0Bilexan-d2mjkdyUGLbcEgB7.png?r=8aa\"\n          alt=\"\"\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default FullNav\n"]},"metadata":{},"sourceType":"module"}