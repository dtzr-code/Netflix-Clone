{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Accordion.css';\nimport { questions } from './AccordionData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Accordion() {\n  _s();\n\n  const [open, setOpen] = useState([0, 0, 0, 0, 0, 0]);\n  let i;\n\n  const toggle = key => {\n    for (i = 1; i < open.length + 1; i++) {\n      if (i === key) {\n        if (open[i] === 0) {\n          open[i] = 1;\n          console.log(open);\n        } else {\n          open[i] = 0;\n          console.log(open);\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accordion__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Frequently Asked Questions \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), questions.map(question => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question--container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"accordion\",\n          onClick: toggle(question.id),\n          children: question.header\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Accordion, \"geaLGUtNx8Nkg8uj+RzJQwcQM4w=\");\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Accordion.js"],"names":["React","useEffect","useState","questions","Accordion","open","setOpen","i","toggle","key","length","console","log","map","question","id","header","body"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,SAAQC,SAAR,QAAwB,iBAAxB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAD,CAAhC;AACA,MAAIK,CAAJ;;AACA,QAAMC,MAAM,GAAIC,GAAD,IAAS;AACtB,SAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAACF,IAAI,CAACK,MAAL,GAAY,CAA1B,EAA6BH,CAAC,EAA9B,EAAiC;AAC/B,UAAIA,CAAC,KAAKE,GAAV,EAAc;AACZ,YAAGJ,IAAI,CAACE,CAAD,CAAJ,KAAY,CAAf,EAAiB;AACfF,UAAAA,IAAI,CAACE,CAAD,CAAJ,GAAU,CAAV;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD,SAHD,MAGO;AACLA,UAAAA,IAAI,CAACE,CAAD,CAAJ,GAAU,CAAV;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD;AACF;AACF;AACF,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGF,SAAS,CAACU,GAAV,CAAeC,QAAD,IAAc;AAC3B,0BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAA8B,UAAA,OAAO,EAAEN,MAAM,CAACM,QAAQ,CAACC,EAAV,CAA7C;AAAA,oBAA+ED,QAAQ,CAACE;AAAxF,WAAiEF,QAAQ,CAACC,EAA1E;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AAAA,sBAAID,QAAQ,CAACG;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAA0CH,QAAQ,CAACC,EAAnD;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAlCQX,S;;KAAAA,S;AAoCT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Accordion.css'\nimport {questions} from './AccordionData'\n\nfunction Accordion() {\n\n  const [open, setOpen] = useState([0,0,0,0,0,0])\n  let i;\n  const toggle = (key) => {\n    for (i = 1; i<open.length+1; i++){\n      if (i === key){\n        if(open[i] === 0){\n          open[i] = 1\n          console.log(open)\n        } else {\n          open[i] = 0\n          console.log(open)\n        }\n      }\n    }\n  }\n\n  return (\n    <div className=\"accordion__container\">\n      <h1> Frequently Asked Questions </h1>\n\n      {questions.map((question) => {\n        return(\n          <div className=\"question--container\" key={question.id} >\n            <button className=\"accordion\" onClick={toggle(question.id)} key={question.id}>{question.header}</button>\n            <div className=\"panel\">\n              <p>{question.body}</p>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Accordion\n\n\n"]},"metadata":{},"sourceType":"module"}