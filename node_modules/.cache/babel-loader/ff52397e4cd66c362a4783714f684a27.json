{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./HomeScreen.css\";\nimport Nav from '../components/Nav';\nimport Row from '../components/Row';\nimport SearchRow from '../components/SearchRow';\nimport Banner from '../components/Banner';\nimport requests from '../Requests';\nimport { API_KEY } from '../Requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HomeScreen() {\n  _s();\n\n  /* for the search results */\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const search_query = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchTerm}`;\n\n  const handleChange = e => {\n    setSearchTerm(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homeScreen\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      value: searchTerm,\n      handleChange: e => handleChange(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), searchTerm ? /*#__PURE__*/_jsxDEV(SearchRow, {\n      title: \"Search Results\",\n      fetchUrl: search_query\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        title: \"NETFLIX ORIGINALS\",\n        fetchUrl: requests.fetchNetflixOriginals,\n        isLargeRow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        title: \"Trending Now\",\n        fetchUrl: requests.fetchTrending\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        title: \"Top Rated\",\n        fetchUrl: requests.fetchTopRated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        title: \"Action Movies\",\n        fetchUrl: requests.fetchActionMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        title: \"Comedy Movies\",\n        fetchUrl: requests.fetchComedyMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        title: \"Horror Movies\",\n        fetchUrl: requests.fetchHorrorMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        title: \"Romance Movies\",\n        fetchUrl: requests.fetchRomanceMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        title: \"Documentaries\",\n        fetchUrl: requests.fetchDocumentaries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HomeScreen, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = HomeScreen;\nexport default HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/dtzr/Documents/GitHub/netflix-clone/src/screens/HomeScreen.js"],"names":["React","useState","Nav","Row","SearchRow","Banner","requests","API_KEY","HomeScreen","searchTerm","setSearchTerm","search_query","handleChange","e","target","value","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,kBAAP;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMU,YAAY,GAAG,qDAAoDJ,OAAQ,UAASE,UAAW,EAArG;;AAEA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACxBH,IAAAA,aAAa,CAACG,CAAD,CAAb;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BAEE,QAAC,GAAD;AACE,MAAA,KAAK,EAAEJ,UADT;AAEE,MAAA,YAAY,EAAEI,CAAC,IAAGD,YAAY,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAFhC;AAAA;AAAA;AAAA;AAAA,YAFF,EAMGN,UAAU,gBAEP,QAAC,SAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,QAAQ,EAAIE;AAFd;AAAA;AAAA;AAAA;AAAA,YAFO,gBAOT;AAAA,8BAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,GAAD;AACE,QAAA,KAAK,EAAC,mBADR;AAEE,QAAA,QAAQ,EAAEL,QAAQ,CAACU,qBAFrB;AAGE,QAAA,UAAU;AAHZ;AAAA;AAAA;AAAA;AAAA,cAPF,eAYE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,cAAX;AAA0B,QAAA,QAAQ,EAAEV,QAAQ,CAACW;AAA7C;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,WAAX;AAAuB,QAAA,QAAQ,EAAEX,QAAQ,CAACY;AAA1C;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,eAAX;AAA2B,QAAA,QAAQ,EAAEZ,QAAQ,CAACa;AAA9C;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,eAAX;AAA2B,QAAA,QAAQ,EAAEb,QAAQ,CAACc;AAA9C;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,eAAX;AAA2B,QAAA,QAAQ,EAAEd,QAAQ,CAACe;AAA9C;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,gBAAX;AAA4B,QAAA,QAAQ,EAAEf,QAAQ,CAACgB;AAA/C;AAAA;AAAA;AAAA;AAAA,cAjBF,eAkBE,QAAC,GAAD;AAAK,QAAA,KAAK,EAAC,eAAX;AAA2B,QAAA,QAAQ,EAAEhB,QAAQ,CAACiB;AAA9C;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAhDQf,U;;KAAAA,U;AAkDT,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react'\nimport \"./HomeScreen.css\"\nimport Nav from '../components/Nav'\nimport Row from '../components/Row'\nimport SearchRow from '../components/SearchRow'\nimport Banner from '../components/Banner'\nimport requests from '../Requests'\nimport { API_KEY } from '../Requests'\n\nfunction HomeScreen() {\n\n  /* for the search results */\n  const [searchTerm, setSearchTerm] = useState(\"\")\n  \n  const search_query= `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchTerm}`\n\n  const handleChange = e => {\n    setSearchTerm(e)\n  }\n\n  return (\n    <div className=\"homeScreen\">\n      {/* Nav */}\n      <Nav \n        value={searchTerm} \n        handleChange={e=> handleChange(e.target.value)}\n      />\n      {searchTerm\n        ?\n          <SearchRow \n            title=\"Search Results\" \n            fetchUrl = {search_query}\n          />\n        :\n        <div>\n          {/* Banner */}\n          <Banner/>\n\n            {/* Row */}\n            {/* Each row will take a few different props */}\n            {/* Props allow us to customise one component from another */}\n          <Row\n            title=\"NETFLIX ORIGINALS\"\n            fetchUrl={requests.fetchNetflixOriginals}\n            isLargeRow\n          />\n          <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n          <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}/>\n          <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n          <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n          <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n          <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies}/>\n          <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries}/>\n        </div>\n        }\n    </div>\n  )\n}\n\nexport default HomeScreen\n"]},"metadata":{},"sourceType":"module"}