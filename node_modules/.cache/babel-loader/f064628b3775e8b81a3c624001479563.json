{"ast":null,"code":"var _jsxFileName = \"/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Accordion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './Accordion.css';\nimport { questions } from './AccordionData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Accordion() {\n  _s();\n\n  const [open, setOpen] = useState([0, 0, 0, 0, 0, 0]);\n  questions.forEach(question => {});\n  /* \n  questions.forEach((question)=> question.id) \n  for (i=1; i<open.length+1; i++){\n    if (i == question.id){   \n      open[i] = 1\n    } \n  }\n  */\n\n  const toggle = () => {\n    let i;\n    let k;\n\n    for (i = 1; i < open.length + 1; i++) {\n      console.log(i);\n    }\n  };\n\n  toggle();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accordion__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Frequently Asked Questions \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), questions.map(question => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question--container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"accordion\",\n          children: question.header\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Accordion, \"geaLGUtNx8Nkg8uj+RzJQwcQM4w=\");\n\n_c = Accordion;\nexport default Accordion;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"sources":["/Users/dtzr/Desktop/Programming languages/ReactJS/Projects/netflix/netflix2 /src/Accordion.js"],"names":["React","useEffect","useState","questions","Accordion","open","setOpen","forEach","question","toggle","i","k","length","console","log","map","header","body","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,SAAQC,SAAR,QAAwB,iBAAxB;;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AAEnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,CAAD,CAAhC;AAEAC,EAAAA,SAAS,CAACI,OAAV,CAAmBC,QAAD,IAAa,CAE9B,CAFD;AAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEE,QAAMC,MAAM,GAAG,MAAM;AACnB,QAAIC,CAAJ;AACA,QAAIC,CAAJ;;AACA,SAAKD,CAAC,GAAC,CAAP,EAAUA,CAAC,GAACL,IAAI,CAACO,MAAL,GAAY,CAAxB,EAA2BF,CAAC,EAA5B,EAA+B;AAC7BG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;AACD;AACF,GAND;;AAQAD,EAAAA,MAAM;AAEN,sBACE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGN,SAAS,CAACY,GAAV,CAAeP,QAAD,IAAc;AAC3B,0BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,WAAlB;AAAA,oBAA+BA,QAAQ,CAACQ;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AAAA,sBAAIR,QAAQ,CAACS;AAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAA0CT,QAAQ,CAACU,EAAnD;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA,CAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA1CQd,S;;KAAAA,S;AA4CT,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Accordion.css'\nimport {questions} from './AccordionData'\n\nfunction Accordion() {\n\n  const [open, setOpen] = useState([0,0,0,0,0,0])\n\n  questions.forEach((question)=> {\n    \n  })\n  /* \n  questions.forEach((question)=> question.id) \n  for (i=1; i<open.length+1; i++){\n    if (i == question.id){   \n      open[i] = 1\n    } \n  }\n  */\n\n  const toggle = () => {\n    let i;\n    let k;\n    for (i=1; i<open.length+1; i++){\n      console.log(i)\n    }\n  }\n\n  toggle()\n\n  return (\n    <div className=\"accordion__container\">\n      <h1> Frequently Asked Questions </h1>\n\n      {questions.map((question) => {\n        return(\n          <div className=\"question--container\" key={question.id}>\n            <button className=\"accordion\">{question.header}</button>\n            <div className=\"panel\">\n              <p>{question.body}</p>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Accordion\n\n\n"]},"metadata":{},"sourceType":"module"}